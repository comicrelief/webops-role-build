---

- name: Add apt repos
  apt_repository:
    repo: "{{item}}"
    update-cache: no
  with_items: apt_repos
  when: apt_repos is defined
  register: update_apt

- name: Update apt cache if necessary
  apt:
    update-cache: yes
  when: update_apt is defined and update_apt.changed == True

- name: Install apt packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ apt_packages }}"
  when: apt_packages is defined

- name: Install pip
  easy_install:
    name: pip
    state: latest # keep this up to date
  when: pip_packages is defined

# Task to install composer
- name: download composer
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/composer
  when: composer_packages is defined

- name: install composer
  shell: cat /tmp/composer | php -- --install-dir=/usr/local/bin
  args:
    creates: /usr/local/bin/composer.phar
  when: composer_packages is defined

- name: rename composer.phar to composer
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  args:
    creates: /usr/local/bin/composer
  when: composer_packages is defined

- name: make composer executable
  file:
    path: /usr/local/bin/composer
    mode: a+x
    state: file
  when: composer_packages is defined

- name: install bundler gem with proper $PATH
  gem:
    name: bundler
    state: latest
    user_install: no
  when: bundler_packages is defined

# Task to install npm

# Task to install deps using pip
- name: Install Python modules with pip
  pip:
    name: "{{item}}"
  with_items: pip_packages
  when: pip_packages is defined

# Task to install deps using composer
- name: Install depencies using composer
  composer:
    command: install
    ignore_platform_reqs: true
    prefer_dist: true
    working_dir: "{{workdir}}" 
  when: composer_packages is defined

# Task to install deps using bundler

# Task to install deps using npm
